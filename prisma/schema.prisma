// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  ADMIN
  LABOUR
  CUSTOMER
}

enum Status {
  BANNED
  ACTIVE
  INACTIVE
}

enum props {
  tactors
  planters
  harvester
}

model User {
  userId    Int      @id @default(autoincrement())
  name      String
  password  String
  email     String   @unique
  role      Role     @default(USER)
  phone     String?
  clients   clients?
  labour    Labour?
  admin     Admin?
  createdAt DateTime @default(now())
}

// Define the Customer model
model clients {
  customerId Int    @id @default(autoincrement())
  user       User   @relation(fields: [userId], references: [userId], onDelete: Cascade, onUpdate: Cascade)
  userId     Int    @unique
  landsize   Int
  address    String
  // Add your customer attributes here

  // plans      Plan[]
}

// Define the Plan model
// model Plan {
//   planId      Int       @id @default(autoincrement())
//   customer    Customer? @relation(fields: [customerId], references: [customerId],onDelete: Cascade,onUpdate: Cascade)
//   customerId  Int?
//   // Add your plan attributes here
// }

// Define the Labour model
model Labour {
  labourId  Int             @id @default(autoincrement())
  user      User            @relation(fields: [userId], references: [userId], onDelete: Cascade, onUpdate: Cascade)
  userId    Int             @unique
  ratings   Int
  equipment props           
  rate      Float
  status    Status
  history   LabourHistory[]

  // Add your labour attributes here
}

model LabourHistory {
  id        Int      @id @default(autoincrement())
  labour    Labour   @relation(fields: [labourId], references: [labourId])
  labourId  Int
  rating    Int
  createdAt DateTime @default(now())

  // Add other attributes related to history if needed
}

model Contactus {
  contactId Int    @id @default(autoincrement())
  name      String
  email     String
  phone     Int
  msg       String
}

//Define the admin model
model Admin {
  adminId Int  @id @default(autoincrement())
  user    User @relation(fields: [userId], references: [userId], onDelete: Cascade, onUpdate: Cascade)
  userId  Int  @unique
  // Add your admin attributes here
}

// npx prisma generate
// npx prisma migrate dev --name init --create-only
// npx prisma migrate deploy
